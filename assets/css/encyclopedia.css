/* Encyclopedia Galactica - Master Stylesheet */
/* ======================================== */

/* CSS Custom Properties (Variables) */
:root {
    /* Dark theme colors */
    --primary-dark: #1a1a2e;
    --primary-blue: #16213e;
    --accent-purple: #7c3aed;
    --accent-cyan: #06b6d4;
    --text-primary: #e4e4e7;
    --text-secondary: #a1a1aa;
    --bg-dark: #0f0f23;
    --bg-card: #1e1e3f;
    --border-color: #2a2a4a;
    
    /* Layout */
    --max-width: 1200px;
    --container-padding: 2rem;
    --border-radius: 8px;
    --transition: all 0.2s ease;
    
    /* Typography */
    --font-family: 'Inter', -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
    --font-size-base: 1rem;
    --line-height-base: 1.6;
    --font-weight-normal: 400;
    --font-weight-medium: 500;
    --font-weight-semibold: 600;
    --font-weight-bold: 700;
    
    /* Spacing */
    --spacing-xs: 0.5rem;
    --spacing-sm: 1rem;
    --spacing-md: 1.5rem;
    --spacing-lg: 2rem;
    --spacing-xl: 3rem;
    --spacing-2xl: 4rem;
}

/* Light mode support */
@media (prefers-color-scheme: light) {
    :root {
        --primary-dark: #fafafa;
        --primary-blue: #f3f4f6;
        --text-primary: #111827;
        --text-secondary: #6b7280;
        --bg-dark: #ffffff;
        --bg-card: #f9fafb;
        --border-color: #e5e7eb;
    }
}

/* Reset and Base Styles */
/* ===================== */

* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

*::before,
*::after {
    box-sizing: border-box;
}

html {
    scroll-behavior: smooth;
    font-size: 16px;
}

body {
    font-family: var(--font-family);
    font-size: var(--font-size-base);
    line-height: var(--line-height-base);
    color: var(--text-primary);
    background-color: var(--bg-dark);
    font-weight: var(--font-weight-normal);
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
    min-height: 100vh;
}

/* Typography */
/* ========== */

h1, h2, h3, h4, h5, h6 {
    font-weight: var(--font-weight-bold);
    line-height: 1.2;
    margin-bottom: var(--spacing-sm);
}

h1 {
    font-size: 2.5rem;
}

h2 {
    font-size: 2rem;
}

h3 {
    font-size: 1.5rem;
}

h4 {
    font-size: 1.25rem;
}

h5 {
    font-size: 1.125rem;
}

h6 {
    font-size: 1rem;
}

p {
    margin-bottom: var(--spacing-md);
}

a {
    color: var(--accent-purple);
    text-decoration: none;
    transition: var(--transition);
}

a:hover {
    color: var(--accent-cyan);
}

strong {
    font-weight: var(--font-weight-semibold);
}

em {
    font-style: italic;
}

/* Layout Components */
/* ================= */

.container {
    max-width: var(--max-width);
    margin: 0 auto;
    padding: var(--container-padding);
}

.header {
    text-align: center;
    margin-bottom: var(--spacing-xl);
    padding-bottom: var(--spacing-lg);
    border-bottom: 2px solid var(--border-color);
}

.header h1 {
    font-size: 3rem;
    font-weight: var(--font-weight-bold);
    color: var(--accent-purple);
    margin-bottom: var(--spacing-sm);
    text-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
}

.subtitle {
    font-size: 1.25rem;
    color: var(--text-secondary);
    font-style: italic;
    margin-bottom: 0;
}

.main-content {
    background: var(--bg-card);
    border-radius: var(--border-radius);
    padding: var(--spacing-lg);
    border: 1px solid var(--border-color);
    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
}

.footer {
    text-align: center;
    margin-top: var(--spacing-xl);
    padding-top: var(--spacing-lg);
    border-top: 1px solid var(--border-color);
    color: var(--text-secondary);
    font-size: 0.9rem;
}

/* Welcome Section */
/* =============== */

.welcome-section {
    margin-bottom: var(--spacing-xl);
}

.welcome-section h2 {
    color: var(--accent-cyan);
    margin-bottom: var(--spacing-sm);
    font-size: 2rem;
}

.welcome-section p {
    font-size: 1.1rem;
    line-height: 1.7;
}

/* Statistics Section */
/* ================== */

.stats-section {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(150px, 1fr));
    gap: var(--spacing-lg);
    margin-bottom: var(--spacing-lg);
}

.stat-item {
    text-align: center;
    padding: var(--spacing-md);
    background: var(--primary-blue);
    border-radius: var(--border-radius);
    border: 1px solid var(--border-color);
    transition: var(--transition);
}

.stat-item:hover {
    transform: translateY(-2px);
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
}

.stat-number {
    display: block;
    font-size: 2.5rem;
    font-weight: var(--font-weight-bold);
    color: var(--accent-purple);
    margin-bottom: var(--spacing-xs);
}

.stat-label {
    color: var(--text-secondary);
    font-size: 0.9rem;
    text-transform: uppercase;
    letter-spacing: 0.5px;
    font-weight: var(--font-weight-medium);
}

/* Button Styles */
/* ============= */

.btn {
    display: inline-flex;
    align-items: center;
    gap: var(--spacing-xs);
    padding: var(--spacing-sm) var(--spacing-md);
    background: var(--accent-purple);
    color: white;
    text-decoration: none;
    border-radius: var(--border-radius);
    font-weight: var(--font-weight-medium);
    transition: var(--transition);
    border: none;
    cursor: pointer;
    font-size: var(--font-size-base);
}

.btn:hover {
    background: var(--accent-cyan);
    transform: translateY(-1px);
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.2);
}

.btn-secondary {
    background: transparent;
    color: var(--accent-purple);
    border: 1px solid var(--accent-purple);
}

.btn-secondary:hover {
    background: var(--accent-purple);
    color: white;
}

.btn-sm {
    padding: var(--spacing-xs) var(--spacing-sm);
    font-size: 0.875rem;
}

.btn-lg {
    padding: var(--spacing-md) var(--spacing-lg);
    font-size: 1.125rem;
}

/* Card Styles */
/* =========== */

.card {
    background: var(--bg-card);
    border: 1px solid var(--border-color);
    border-radius: var(--border-radius);
    padding: var(--spacing-md);
    transition: var(--transition);
}

.card:hover {
    transform: translateY(-2px);
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
}

.card-header {
    margin-bottom: var(--spacing-sm);
    padding-bottom: var(--spacing-sm);
    border-bottom: 1px solid var(--border-color);
}

.card-title {
    font-size: 1.25rem;
    font-weight: var(--font-weight-semibold);
    color: var(--text-primary);
    margin-bottom: var(--spacing-xs);
}

.card-subtitle {
    color: var(--text-secondary);
    font-size: 0.875rem;
}

.card-body {
    margin-bottom: var(--spacing-sm);
}

.card-footer {
    padding-top: var(--spacing-sm);
    border-top: 1px solid var(--border-color);
    font-size: 0.875rem;
    color: var(--text-secondary);
}

/* Form Styles */
/* =========== */

.form-group {
    margin-bottom: var(--spacing-md);
}

.form-label {
    display: block;
    margin-bottom: var(--spacing-xs);
    font-weight: var(--font-weight-medium);
    color: var(--text-primary);
}

.form-input,
.form-textarea,
.form-select {
    width: 100%;
    padding: var(--spacing-sm);
    border: 1px solid var(--border-color);
    border-radius: var(--border-radius);
    background: var(--bg-card);
    color: var(--text-primary);
    font-size: var(--font-size-base);
    transition: var(--transition);
}

.form-input:focus,
.form-textarea:focus,
.form-select:focus {
    outline: none;
    border-color: var(--accent-purple);
    box-shadow: 0 0 0 2px rgba(124, 58, 237, 0.2);
}

.form-textarea {
    resize: vertical;
    min-height: 120px;
}

/* Utility Classes */
/* =============== */

.text-center {
    text-align: center;
}

.text-left {
    text-align: left;
}

.text-right {
    text-align: right;
}

.text-primary {
    color: var(--text-primary);
}

.text-secondary {
    color: var(--text-secondary);
}

.text-accent {
    color: var(--accent-purple);
}

.text-cyan {
    color: var(--accent-cyan);
}

.bg-primary {
    background-color: var(--primary-blue);
}

.bg-card {
    background-color: var(--bg-card);
}

.border {
    border: 1px solid var(--border-color);
}

.border-radius {
    border-radius: var(--border-radius);
}

.shadow {
    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
}

.shadow-lg {
    box-shadow: 0 10px 25px rgba(0, 0, 0, 0.2);
}

.mt-0 { margin-top: 0; }
.mt-1 { margin-top: var(--spacing-xs); }
.mt-2 { margin-top: var(--spacing-sm); }
.mt-3 { margin-top: var(--spacing-md); }
.mt-4 { margin-top: var(--spacing-lg); }
.mt-5 { margin-top: var(--spacing-xl); }

.mb-0 { margin-bottom: 0; }
.mb-1 { margin-bottom: var(--spacing-xs); }
.mb-2 { margin-bottom: var(--spacing-sm); }
.mb-3 { margin-bottom: var(--spacing-md); }
.mb-4 { margin-bottom: var(--spacing-lg); }
.mb-5 { margin-bottom: var(--spacing-xl); }

.ml-0 { margin-left: 0; }
.ml-1 { margin-left: var(--spacing-xs); }
.ml-2 { margin-left: var(--spacing-sm); }
.ml-3 { margin-left: var(--spacing-md); }
.ml-4 { margin-left: var(--spacing-lg); }

.mr-0 { margin-right: 0; }
.mr-1 { margin-right: var(--spacing-xs); }
.mr-2 { margin-right: var(--spacing-sm); }
.mr-3 { margin-right: var(--spacing-md); }
.mr-4 { margin-right: var(--spacing-lg); }

.p-0 { padding: 0; }
.p-1 { padding: var(--spacing-xs); }
.p-2 { padding: var(--spacing-sm); }
.p-3 { padding: var(--spacing-md); }
.p-4 { padding: var(--spacing-lg); }

.hidden {
    display: none !important;
}

.visible {
    display: block !important;
}

.flex {
    display: flex;
}

.flex-column {
    flex-direction: column;
}

.flex-wrap {
    flex-wrap: wrap;
}

.justify-center {
    justify-content: center;
}

.justify-between {
    justify-content: space-between;
}

.align-center {
    align-items: center;
}

.gap-1 { gap: var(--spacing-xs); }
.gap-2 { gap: var(--spacing-sm); }
.gap-3 { gap: var(--spacing-md); }
.gap-4 { gap: var(--spacing-lg); }

/* Responsive Design */
/* ================= */

/* Tablet */
@media (max-width: 768px) {
    :root {
        --container-padding: 1rem;
    }
    
    .header h1 {
        font-size: 2rem;
    }
    
    .main-content {
        padding: var(--spacing-md);
    }
    
    .stats-section {
        grid-template-columns: 1fr;
        gap: var(--spacing-sm);
    }
    
    .stat-number {
        font-size: 2rem;
    }
    
    h1 {
        font-size: 2rem;
    }
    
    h2 {
        font-size: 1.5rem;
    }
    
    h3 {
        font-size: 1.25rem;
    }
}

/* Mobile */
@media (max-width: 480px) {
    :root {
        --container-padding: 0.75rem;
    }
    
    .header h1 {
        font-size: 1.75rem;
    }
    
    .subtitle {
        font-size: 1rem;
    }
    
    .main-content {
        padding: var(--spacing-sm);
    }
    
    .btn {
        width: 100%;
        justify-content: center;
    }
    
    .card {
        padding: var(--spacing-sm);
    }
    
    .stat-number {
        font-size: 1.75rem;
    }
    
    h1 {
        font-size: 1.75rem;
    }
    
    h2 {
        font-size: 1.25rem;
    }
    
    h3 {
        font-size: 1.125rem;
    }
}

/* Print Styles */
/* ============ */

@media print {
    :root {
        --text-primary: #000;
        --text-secondary: #666;
        --bg-dark: #fff;
        --bg-card: #fff;
        --border-color: #ccc;
    }
    
    body {
        font-size: 12pt;
        line-height: 1.4;
    }
    
    .header,
    .footer,
    .navigation {
        display: none;
    }
    
    .main-content {
        box-shadow: none;
        border: none;
    }
    
    .btn {
        display: none;
    }
    
    .card {
        box-shadow: none;
        border: 1px solid #ccc;
    }
    
    a {
        color: #000;
        text-decoration: underline;
    }
    
    .download-links {
        display: none;
    }
}

/* Accessibility */
/* ============= */

/* Focus styles */
*:focus {
    outline: 2px solid var(--accent-purple);
    outline-offset: 2px;
}

/* Reduced motion */
@media (prefers-reduced-motion: reduce) {
    * {
        animation-duration: 0.01ms !important;
        animation-iteration-count: 1 !important;
        transition-duration: 0.01ms !important;
    }
}

/* High contrast mode */
@media (prefers-contrast: high) {
    :root {
        --border-color: #000;
        --text-secondary: #333;
    }
}

/* Animation classes */
/* ================= */

.fade-in {
    opacity: 0;
    animation: fadeIn 0.5s ease-in-out forwards;
}

@keyframes fadeIn {
    to {
        opacity: 1;
    }
}

.slide-up {
    transform: translateY(20px);
    opacity: 0;
    animation: slideUp 0.5s ease-out forwards;
}

@keyframes slideUp {
    to {
        transform: translateY(0);
        opacity: 1;
    }
}

.scale-in {
    transform: scale(0.9);
    opacity: 0;
    animation: scaleIn 0.3s ease-out forwards;
}

@keyframes scaleIn {
    to {
        transform: scale(1);
        opacity: 1;
    }
}

/* Additional styles for index page */
.category-section {
    margin-bottom: 4rem;
}

.category-title {
    color: var(--accent-cyan);
    font-size: 2rem;
    margin-bottom: 1rem;
    border-bottom: 2px solid var(--accent-cyan);
    padding-bottom: 0.5rem;
}

.category-description {
    color: var(--text-secondary);
    font-size: 1.1rem;
    margin-bottom: 1rem;
    line-height: 1.6;
}

.category-stats {
    display: flex;
    gap: 1.5rem;
    margin-bottom: 2rem;
}

.category-stats .stat {
    background: var(--accent-purple);
    color: white;
    padding: 0.5rem 1rem;
    border-radius: 20px;
    font-size: 0.9rem;
    font-weight: 500;
}

.articles-grid {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(400px, 1fr));
    gap: 1.5rem;
}

.article-item {
    background: var(--bg-card);
    border: 1px solid var(--border-color);
    border-radius: 8px;
    padding: 1.5rem;
    transition: transform 0.2s, box-shadow 0.2s;
}

.article-item:hover {
    transform: translateY(-2px);
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
}

.article-link {
    color: var(--text-primary);
    text-decoration: none;
    font-size: 1.1rem;
    font-weight: 600;
}

.article-link:hover {
    color: var(--accent-purple);
}

.article-meta {
    display: flex;
    flex-wrap: wrap;
    gap: 1rem;
    margin-top: 0.5rem;
    font-size: 0.9rem;
    color: var(--text-secondary);
}

.download-links-inline {
    margin-left: auto;
}

.download-link-small {
    background: var(--accent-purple);
    color: white;
    padding: 0.25rem 0.75rem;
    border-radius: 4px;
    text-decoration: none;
    font-size: 0.8rem;
    font-weight: 500;
    margin-left: 0.5rem;
}

.download-link-small.pdf {
    background: #dc2626;
}

.download-link-small.epub {
    background: #059669;
}

.download-link-small:hover {
    opacity: 0.8;
}

.search-box {
    margin-bottom: 2rem;
}

.search-input {
    width: 100%;
    padding: 1rem;
    border: 1px solid var(--border-color);
    border-radius: 8px;
    background: var(--bg-card);
    color: var(--text-primary);
    font-size: 1rem;
}

.search-input:focus {
    outline: none;
    border-color: var(--accent-purple);
}

/* Responsive design */
@media (max-width: 768px) {
    .articles-grid {
        grid-template-columns: 1fr;
    }
    
    .article-meta {
        flex-direction: column;
        gap: 0.5rem;
    }
    
    .download-links-inline {
        margin-left: 0;
    }
}